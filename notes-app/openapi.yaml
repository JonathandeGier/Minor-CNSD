openapi: 3.0.1
info:
  title: Minor Cloud Native Software Development "Notes"
  description: This is a simple notes server.
  version: 1.0.0

servers:
- url: http://route.to.api/v1

tags:
- name: Notes
  description: Everything about Notes

paths:
  /notes:
    get:
      summary: Get all existing notes
      tags:
        - Notes
      operationId: GetAllNotes
      parameters:
        - $ref: '#/components/parameters/Content'
      responses:
        200:
          $ref: '#/components/responses/GetNoteListSuccess'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetAllNotesFunction.Arn}/invocations

    post:
      summary: Add a new pet to the store
      tags:
        - Notes
      operationId: CreateNote
      requestBody:
        $ref: '#/components/requestBodies/CreateOrUpdateNote'
      responses:
        200:
          $ref: '#/components/responses/NoteResponse'
        400:
          $ref: '#/components/responses/BadRequestResponse'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateNoteFunction.Arn}/invocations

  /notes/{NoteId}:
    get:
      summary: Get a single Note
      description: Get a single note
      tags:
        - Notes
      parameters:
        - $ref: '#/components/parameters/NoteId'
      responses:
        200:
          $ref: '#/components/responses/NoteResponse'
        400:
          $ref: '#/components/responses/BadRequestResponse'
        404:
          $ref: '#/components/responses/NotFoundResponse'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetNoteFunction.Arn}/invocations

    put:
      summary: Update a note
      tags:
        - Notes
      operationId: UpdateNote
      requestBody:
        $ref: '#/components/requestBodies/CreateOrUpdateNote'
      responses:
        200:
          $ref: '#/components/responses/NoteResponse'
        400:
          $ref: '#/components/responses/BadRequestResponse'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateNoteFunction.Arn}/invocations

    delete:
      summary: Delete a note
      description: Delete a note
      tags:
        - Notes
      parameters:
        - $ref: '#/components/parameters/NoteId'
      responses:
        200:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequestResponse'
        404:
          $ref: '#/components/responses/NotFoundResponse'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteNoteFunction.Arn}/invocations


components:
  ############## REQUEST BODIES ##############
  requestBodies:
    CreateOrUpdateNote:
      description: The note that needs to be added
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrUpdateNote'

  ############## RESPONSES ##############
  responses:
    GetNoteListSuccess:
      description: Success
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Note'

    NoteResponse:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Note"
    NotFoundResponse:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NoContent:
      description: No Content
    BadRequestResponse:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  ############## PARAMETERS ##############
  parameters:
    NoteId:
      name: NoteId
      in: path
      required: true
      description: Identification of a note
      schema:
        type: string
        format: uuid
    Content:
      name: content
      in: query
      required: false
      description: Search by exact content
      schema:
        type: string

  ############## SCHEMAS ##############
  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateOrUpdateNote:
      type: object
      required:
        - content
      properties:
        content:
          type: string

    Error:
      type: object
      properties:
        message:
          type: string
